document.addEventListener('DOMContentLoaded', () => {
    const searchBtn = document.getElementById('searchBtn');
    const searchInput = document.getElementById('searchInput');
    const resultsDiv = document.getElementById('results');

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (50+ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫)
    const imageDatabase = {
        cats: [
            'https://upload.wikimedia.org/wikipedia/commons/1/15/Cat_August_2010-4.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/b/bc/Juvenile_Ragdoll.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/4/4d/Cat_November_2010-1a.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/a/a3/Sheba1.JPG',
            'https://upload.wikimedia.org/wikipedia/commons/3/3a/Cat03.jpg'
        ],
        dogs: [
            'https://upload.wikimedia.org/wikipedia/commons/4/4c/ChowChow2Szczecin.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/d/d0/German_Shepherd_-_DSC_0346_%2810096362833%29.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/a/af/Golden_retriever_eating_pigs_foot.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/f/f3/Young_black_labrador_retriever.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/b/bf/Bulldog_inglese.jpg'
        ],
        nature: [
            'https://upload.wikimedia.org/wikipedia/commons/3/36/Hopetoun_falls.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/4/42/Siberian_tiger_by_Til_2006.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/3/3a/Fiordland_National_Park.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/0/0d/Aurora_borealis_panorama.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/1/1e/Moraine_Lake_17092005.jpg'
        ],
        food: [
            'https://upload.wikimedia.org/wikipedia/commons/6/6d/Good_Food_Display_-_NCI_Visuals_Online.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/a/a4/Pasta_Puttanesca.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/3/3a/Caprese_Salad.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/6/61/Pizza_Prosciutto.jpg',
            'https://upload.wikimedia.org/wikipedia/commons/8/8f/Colorful_vegetables.jpg'
        ]
    };

    searchBtn.addEventListener('click', executeSearch);
    searchInput.addEventListener('keypress', (e) => e.key === 'Enter' && executeSearch());

    function executeSearch() {
        const query = searchInput.value.trim().toLowerCase();
        if (!query) {
            showMessage('‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å', 'error');
            return;
        }

        showMessage('üîç –ò—â–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏...', 'loading');
        searchBtn.disabled = true;

        setTimeout(() => {
            try {
                let images = getRelevantImages(query);
                displayResults(images);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞:', error);
                showMessage('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', 'error');
            } finally {
                searchBtn.disabled = false;
            }
        }, 300);
    }

    function getRelevantImages(query) {
        // –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if (/–∫–æ—Ç|–∫–æ—à|–∫–æ—Ç[–µ—ë—è]|–∫–æ—Ç—ë–Ω|cat|–∫–∏—Å/.test(query)) {
            return shuffleArray([...imageDatabase.cats]);
        } 
        else if (/–ø—ë—Å|—Å–æ–±–∞–∫|—â–µ–Ω|dog|—Ö–∞—Å–∫|–æ–≤—á–∞—Ä/.test(query)) {
            return shuffleArray([...imageDatabase.dogs]);
        }
        else if (/–ø—Ä–∏—Ä–æ–¥|–ø–µ–π–∑–∞–∂|–ª–µ—Å|–≥–æ—Ä|–æ–∑–µ—Ä|—Ä–µ—á/.test(query)) {
            return shuffleArray([...imageDatabase.nature]);
        }
        else if (/–µ–¥–∞|–∫—É–ª–∏–Ω|–ø–∏—Ü—Ü|–±—É—Ä–≥–µ—Ä|—Å–∞–ª–∞—Ç|—Å—É–ø/.test(query)) {
            return shuffleArray([...imageDatabase.food]);
        }
        else {
            // –î–ª—è –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ - —Å–º–µ—à–∏–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            return shuffleArray([
                ...imageDatabase.cats,
                ...imageDatabase.dogs,
                ...imageDatabase.nature,
                ...imageDatabase.food
            ]).slice(0, 8); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º 8 —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        }
    }

    function shuffleArray(array) {
        // –ê–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ—Ç—Å–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
        for (let i = array.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [array[j], array[i]];
        }
        return array;
    }

    function displayResults(images) {
        if (!images || images.length === 0) {
            showMessage('üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
            return;
        }

        resultsDiv.innerHTML = images.map((img, index) => `
            <div class="image-card">
                <img src="${img}" 
                     alt="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"
                     onerror="this.onerror=null;this.src='https://via.placeholder.com/300x200?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ+–Ω–µ+–∑–∞–≥—Ä—É–∂–µ–Ω–æ'">
                <div class="image-actions">
                    <button onclick="window.open('${img}', '_blank')">
                        üîç –û—Ç–∫—Ä—ã—Ç—å
                    </button>
                    <a href="${img}" download="image_${index}.jpg">
                        ‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å
                    </a>
                </div>
            </div>
        `).join('');
    }

    function showMessage(text, type) {
        resultsDiv.innerHTML = `<div class="${type}">${text}</div>`;
    }
});