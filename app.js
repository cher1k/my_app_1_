document.addEventListener('DOMContentLoaded', () => {
    const searchBtn = document.getElementById('searchBtn');
    const searchInput = document.getElementById('searchInput');
    const resultsDiv = document.getElementById('results');

    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –±–∞–∑–∞ —Å 60+ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (20 –∫–æ—à–µ–∫, 20 —Å–æ–±–∞–∫, 20 –ø—Ä–∏—Ä–æ–¥—ã/–µ–¥—ã)
    const imageDatabase = {
        cats: Array.from({length: 20}, (_, i) => 
            `https://cdn2.thecatapi.com/images/${i+1}.jpg`),
        dogs: Array.from({length: 20}, (_, i) => 
            `https://cdn2.thedogapi.com/images/${String.fromCharCode(97+i)}.jpg`),
        nature: [
            'https://source.unsplash.com/random/300x200/?nature',
            'https://source.unsplash.com/random/300x200/?mountain',
            'https://source.unsplash.com/random/300x200/?forest',
            // +17 –¥—Ä—É–≥–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤...
        ],
        food: [
            'https://source.unsplash.com/random/300x200/?pizza',
            'https://source.unsplash.com/random/300x200/?burger',
            // +18 –¥—Ä—É–≥–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤...
        ]
    };

    searchBtn.addEventListener('click', executeSearch);
    searchInput.addEventListener('keypress', (e) => e.key === 'Enter' && executeSearch());

    async function executeSearch() {
        const query = searchInput.value.trim().toLowerCase();
        if (!query) {
            showMessage('‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∫–æ—à–∫–∏, —Å–æ–±–∞–∫–∏, –ø—Ä–∏—Ä–æ–¥–∞)', 'error');
            return;
        }

        showMessage('üîç –ò—â–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏...', 'loading');
        searchBtn.disabled = true;

        try {
            const images = await getImagesByQuery(query);
            displayResults(images);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            showMessage('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', 'error');
        } finally {
            searchBtn.disabled = false;
        }
    }

    function getImagesByQuery(query) {
        return new Promise((resolve) => {
            setTimeout(() => {
                let result = [];
                
                // –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤
                const isCatQuery = /–∫–æ—Ç|–∫–æ—à|–∫–∏—Å|–º—è—É|cat|–∫–æ—Ç[–µ—ë—è—é]/.test(query);
                const isDogQuery = /–ø—ë—Å|—Å–æ–±–∞|—â–µ–Ω|–≥–∞–≤|dog|—Ö–∞—Å–∫|–æ–≤—á–∞—Ä/.test(query);
                const isNatureQuery = /–ø—Ä–∏—Ä–æ–¥|–ø–µ–π–∑–∞–∂|–ª–µ—Å|–≥–æ—Ä|–≤–æ–¥–æ–ø–∞–¥|—Ä–∞—Å—Ç–µ–Ω/.test(query);
                const isFoodQuery = /–µ–¥–∞|–ø–∏—Ü—Ü|–±—É—Ä–≥–µ—Ä|—Å–∞–ª–∞—Ç|—Å—É–ø|food/.test(query);

                if (isCatQuery) {
                    result = getRandomItems(imageDatabase.cats, 8);
                } 
                else if (isDogQuery) {
                    result = getRandomItems(imageDatabase.dogs, 8);
                }
                else if (isNatureQuery) {
                    result = getRandomItems(imageDatabase.nature, 8);
                }
                else if (isFoodQuery) {
                    result = getRandomItems(imageDatabase.food, 8);
                }
                else {
                    // –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ - –º–∏–∫—Å –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    result = [
                        ...getRandomItems(imageDatabase.cats, 2),
                        ...getRandomItems(imageDatabase.dogs, 2),
                        ...getRandomItems(imageDatabase.nature, 2),
                        ...getRandomItems(imageDatabase.food, 2)
                    ];
                }

                resolve(result);
            }, 300);
        });
    }

    function getRandomItems(array, count) {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const shuffled = [...array].sort(() => 0.5 - Math.random());
        return shuffled.slice(0, count);
    }

    function displayResults(images) {
        if (!images.length) {
            showMessage('üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ "–∫–æ—à–∫–∏", "—Å–æ–±–∞–∫–∏" –∏–ª–∏ "–ø—Ä–∏—Ä–æ–¥–∞"', 'error');
            return;
        }

        resultsDiv.innerHTML = images.map((img, i) => `
            <div class="image-card">
                <img src="${img}?t=${Date.now()}" 
                     alt="–†–µ–∑—É–ª—å—Ç–∞—Ç" 
                     loading="lazy"
                     onerror="this.src='https://placekitten.com/300/200?image=${i}'">
                <div class="image-actions">
                    <a href="${img}" target="_blank">üîç –û—Ç–∫—Ä—ã—Ç—å</a>
                    <a href="${img}" download="image_${i}.jpg">‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å</a>
                </div>
            </div>
        `).join('');
    }

    function showMessage(text, type) {
        resultsDiv.innerHTML = `<div class="${type}">${text}</div>`;
    }
});