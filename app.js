document.addEventListener('DOMContentLoaded', () => {
    const searchBtn = document.getElementById('searchBtn');
    const searchInput = document.getElementById('searchInput');
    const resultsDiv = document.getElementById('results');

    // –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    let imageCache = [];

    searchBtn.addEventListener('click', executeSearch);
    searchInput.addEventListener('keypress', (e) => e.key === 'Enter' && executeSearch());

    async function executeSearch() {
        const query = searchInput.value.trim();
        if (!query) {
            showMessage('‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å', 'error');
            return;
        }

        showMessage('üîç –ò—â–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏...', 'loading');
        searchBtn.disabled = true;

        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
            imageCache = [
                ...await getNaturePhotos(query),
                ...await getAnimalPhotos(query),
                ...await getFoodPhotos(query)
            ].filter(img => img); // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

            if (imageCache.length === 0) {
                showMessage('üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
                return;
            }

            displayResults(imageCache);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            showMessage('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', 'error');
        } finally {
            searchBtn.disabled = false;
        }
    }

    // 1. –ü—Ä–∏—Ä–æ–¥–∞ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫)
    async function getNaturePhotos(query) {
        const baseUrl = 'https://source.unsplash.com/300x200/?';
        return [
            `${baseUrl}${encodeURIComponent(query)},nature`,
            `${baseUrl}${encodeURIComponent(query)},landscape`,
            `${baseUrl}${encodeURIComponent(query)},water`
        ];
    }

    // 2. –ñ–∏–≤–æ—Ç–Ω—ã–µ (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫)
    async function getAnimalPhotos(query) {
        const baseUrl = 'https://source.unsplash.com/300x200/?';
        return [
            `${baseUrl}${encodeURIComponent(query)},animal`,
            `${baseUrl}${encodeURIComponent(query)},cat`,
            `${baseUrl}${encodeURIComponent(query)},dog`
        ];
    }

    // 3. –ï–¥–∞ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫)
    async function getFoodPhotos(query) {
        const baseUrl = 'https://source.unsplash.com/300x200/?';
        return [
            `${baseUrl}${encodeURIComponent(query)},food`,
            `${baseUrl}${encodeURIComponent(query)},fruit`,
            `${baseUrl}${encodeURIComponent(query)},dessert`
        ];
    }

    function displayResults(images) {
        resultsDiv.innerHTML = images.map((img, index) => `
            <div class="image-card" data-id="${index}">
                <img src="${img}" 
                     alt="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"
                     onerror="this.onerror=null;this.src='https://via.placeholder.com/300x200?text=Image+Error'">
                <div class="image-actions">
                    <button onclick="window.open('${img}', '_blank')">
                        üîç –û—Ç–∫—Ä—ã—Ç—å
                    </button>
                    <button onclick="downloadImage('${img}', 'image_${index}.jpg')">
                        ‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å
                    </button>
                </div>
            </div>
        `).join('');
    }

    function showMessage(text, type) {
        resultsDiv.innerHTML = `<div class="${type}">${text}</div>`;
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (–¥–æ–±–∞–≤–ª—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏)
function downloadImage(url, filename) {
    fetch(url)
        .then(response => response.blob())
        .then(blob => {
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = filename;
            link.click();
        })
        .catch(() => alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'));
}